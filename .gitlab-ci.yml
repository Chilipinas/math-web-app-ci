stages:
  - test
  - build
  - func_test



pytest:
  stage: test
  image: python:3.10
  script:
    - pip install -r requirements.txt
    - pytest --junitxml=junit.xml tests/unit_tests
  artifacts:
    reports:
      junit: junit.xml

.docker-registry-auth:
    before_script:
        - mkdir -p /kaniko/.docker
        - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

.build-docker-kaniko:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  extends: .docker-registry-auth
  script:
    - >-
      /kaniko/executor
      --context "${CONTEXT_PATH}"
      --dockerfile "${DOCKERFILE_PATH}"
      --cache-copy-layers
      --destination "${CI_REGISTRY_IMAGE}/$IMAGE_NAME:$IMAGE_TAG"
      --cache=true

build-docker:
  extends: .build-docker-kaniko
  variables:
    DOCKERFILE_PATH: Dockerfile
    CONTEXT_PATH: ${CI_PROJECT_DIR}
    IMAGE_NAME: web_calculator
    IMAGE_TAG: 0.0.$CI_PIPELINE_IID

postman api testing:
  stage: func_test
  image:
    name: postman/newman
    entrypoint: [""]
  extends: .docker-registry-auth
  services:
    - name: ${CI_REGISTRY_IMAGE}/web_calculator:0.0.$CI_PIPELINE_IID
      alias: web-app
  before_script:
  - npm install -g newman
  script:
    - npm update
    - newman run postman_collections/postman_collection.json --env-var "baseUrl=web-app:5000" -r cli,junit --reporter-junit-export ./newman/report.xml
  artifacts:
    paths:
      - $CI_PROJECT_DIR/newman/report.xml
    expire_in: 1 week

